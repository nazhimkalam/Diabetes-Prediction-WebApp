{"version":3,"sources":["components/About/About.js","components/DiabetesPredTitle/DiabetesPredTitle.js","components/Footer/Footer.js","components/MainTitle/MainTitle.js","components/PredictionSection/PredictionSection.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","src","alt","DiabetesPredTitle","Footer","MainTitle","PredictionSection","useState","result","setResult","age","setAge","pregnancies","setPregnancies","glucose","setGlucose","bloodPressure","setBloodPressure","skinThickness","setSkinThickness","insulin","setInsulin","bmi","setBmi","diabetesPedigreeFunction","setDiabetesPedigreeFunction","size","value","type","onChange","e","target","name","onClick","preventDefault","dataToSend","Age","Pregnancies","Glucose","BloodPressure","SkinThickness","Insulin","BMI","DiabetesPedigreeFunction","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","Prediction","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f7790eb.chunk.js","sourcesContent":["import './About.css';\r\n\r\nfunction About() {\r\n\treturn (\r\n\t\t<div className=\"about\">\r\n\t\t\t<div className=\"about__about\">\r\n\t\t\t\t<h2>About</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDiabetes is a disease that occurs when your blood glucose, also called blood sugar, is too high. Blood glucose\r\n\t\t\t\t\tis your main source of energy and comes from the food you eat. Insulin, a hormone made by the pancreas, helps\r\n\t\t\t\t\tglucose from food get into your cells to be used for energy. Sometimes your body doesn’t make enough—or\r\n\t\t\t\t\tany—insulin or doesn’t use insulin well. Glucose then stays in your blood and doesn’t reach your cells.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tOver time, having too much glucose in your blood can cause health problems. Although diabetes has no cure, you\r\n\t\t\t\t\tcan take steps to manage your diabetes and stay healthy. Sometimes people call diabetes “a touch of sugar” or\r\n\t\t\t\t\t“borderline diabetes.” These terms suggest that someone doesn’t really have diabetes or has a less serious\r\n\t\t\t\t\tcase, but every case of diabetes is serious.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"about__common\">\r\n\t\t\t\t<h2>How common is diabetes?</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAs of 2015, 30.3 million people in the United States, or 9.4 percent of the population, had diabetes. More\r\n\t\t\t\t\tthan 1 in 4 of them didn’t know they had the disease. Diabetes affects 1 in 4 people over the age of 65. About\r\n\t\t\t\t\t90-95 percent of cases in adults are type 2 diabetes.1\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"about__healthProblems\">\r\n\t\t\t\t<h2>What health problems can people with diabetes develop?</h2>\r\n\t\t\t\t<p>Over time, high blood glucose leads to problems such as</p>\r\n\t\t\t\t<div className=\"about__healthProblemsList\">\r\n\t\t\t\t\t<p> • heart disease</p>\r\n\t\t\t\t\t<p> • stroke</p>\r\n\t\t\t\t\t<p> • kidney disease</p>\r\n\t\t\t\t\t<p> • eye problems</p>\r\n\t\t\t\t\t<p> • dental disease</p>\r\n\t\t\t\t\t<p> • nerve damage</p>\r\n\t\t\t\t\t<p> • foot problems</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"about__images\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://cdn.images.express.co.uk/img/dynamic/11/590x/Diabetes-complication-841047.jpg\"\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default About;\r\n","import './DiabetesPredTitle.css';\r\n\r\nfunction DiabetesPredTitle() {\r\n\treturn (\r\n\t\t<div className=\"lungCancerPredictionTitle\">\r\n\t\t\t<h2>DIABETES PREDICTION</h2>\r\n\t\t\t<p>\r\n\t\t\t\t<span>How it works :</span> Just fill all the fields and hit the PREDICT button\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DiabetesPredTitle;\r\n","import \"./Footer.css\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            @nazhimkalam\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './MainTitle.css';\r\n\r\nfunction MainTitle() {\r\n\treturn (\r\n\t\t<div className=\"mainTitle\">\r\n\t\t\t<h1>DIABETES DISEASE</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MainTitle;\r\n","import { useState } from 'react';\r\nimport './PredictionSection.css';\r\n\r\nfunction PredictionSection() {\r\n\tconst [result, setResult] = useState('');\r\n\tconst [age, setAge] = useState(0);\r\n\tconst [pregnancies, setPregnancies] = useState(0);\r\n\tconst [glucose, setGlucose] = useState(0);\r\n\tconst [bloodPressure, setBloodPressure] = useState(0);\r\n\tconst [skinThickness, setSkinThickness] = useState(0);\r\n\tconst [insulin, setInsulin] = useState(0);\r\n\tconst [bmi, setBmi] = useState(0);\r\n\tconst [diabetesPedigreeFunction, setDiabetesPedigreeFunction] = useState(0);\r\n\r\n\tconst submitResponse = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst dataToSend = {\r\n\t\t\tAge: age,\r\n\t\t\tPregnancies: pregnancies,\r\n\t\t\tGlucose: glucose,\r\n\t\t\tBloodPressure: bloodPressure,\r\n\t\t\tSkinThickness: skinThickness,\r\n\t\t\tInsulin: insulin,\r\n\t\t\tBMI: bmi,\r\n\t\t\tDiabetesPedigreeFunction: diabetesPedigreeFunction,\r\n\t\t};\r\n\r\n\t\t// POST request using fetch with React hooks\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify(dataToSend),\r\n\t\t};\r\n\t\tfetch('https://diabetes-prediction-backend.herokuapp.com/predict', requestOptions)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((result) => setResult(result.Prediction));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"predictionSection\">\r\n\t\t\t<div className=\"predictionSection__range\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>Pregnancies</span> : Number of times pregnant\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>Glucose</span> : Plasma glucose concentration a 2 hours in an oral glucose tolerance test\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>Blood Pressure</span> : Diastolic blood pressure (mm Hg)\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>Skin Thickness</span> : Triceps skin fold thickness (mm)\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>Insulin</span> : 2-Hour serum insulin (mu U/ml)\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>BMI</span> : Body mass index (weight in kg/(height in m)^2)\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t<span>Diabetes Pedigree Function</span> : Diabetes pedigree function\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>Age</span> : Age (years)\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* result */}\r\n\t\t\t{result && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={result === 'Positive' ? 'predictionSection__resultPositive' : 'predictionSection__resultNegative'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3>prediction: {result}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<form>\r\n\t\t\t\t<div className=\"predictionSection__left\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tAge: <input size=\"2\" value={age} type=\"number\" onChange={(e) => setAge(e.target.value)} />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tPregnancies:{' '}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"pregnancies\"\r\n\t\t\t\t\t\t\tvalue={pregnancies}\r\n\t\t\t\t\t\t\tonChange={(e) => setPregnancies(e.target.value)}\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tGlucose: <input name=\"glucose\" value={glucose} onChange={(e) => setGlucose(e.target.value)} type=\"number\" />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tBlood Pressure:{' '}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"bloodPressure\"\r\n\t\t\t\t\t\t\tvalue={bloodPressure}\r\n\t\t\t\t\t\t\tonChange={(e) => setBloodPressure(e.target.value)}\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tSkin Thickness:{' '}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"skinThickness\"\r\n\t\t\t\t\t\t\tvalue={skinThickness}\r\n\t\t\t\t\t\t\tonChange={(e) => setSkinThickness(e.target.value)}\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tInsulin: <input name=\"insulin\" value={insulin} onChange={(e) => setInsulin(e.target.value)} type=\"number\" />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tBMI: <input name=\"bmi\" value={bmi} onChange={(e) => setBmi(e.target.value)} type=\"number\" />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tDiabetes Pedigree Function:{' '}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"chronicLungDisease\"\r\n\t\t\t\t\t\t\tvalue={diabetesPedigreeFunction}\r\n\t\t\t\t\t\t\tonChange={(e) => setDiabetesPedigreeFunction(e.target.value)}\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<button type=\"submit\" className=\"predictionSection__predictBTN\" onClick={submitResponse}>\r\n\t\t\t\t\t\tPREDICT\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PredictionSection;\r\n","\r\nimport './App.css';\r\nimport About from './components/About/About';\r\nimport DiabetesPredTitle from './components/DiabetesPredTitle/DiabetesPredTitle';\r\nimport Footer from './components/Footer/Footer';\r\nimport MainTitle from './components/MainTitle/MainTitle';\r\nimport PredictionSection from './components/PredictionSection/PredictionSection';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<MainTitle />\r\n\t\t\t<About />\r\n\t\t\t<DiabetesPredTitle />\r\n\t\t\t<PredictionSection />\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}